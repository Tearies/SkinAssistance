<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:SkinAssistance"
    xmlns:controls="clr-namespace:SkinAssistance.Core.Controls;assembly=SkinAssistance.Core"
    xmlns:bootstrap="clr-namespace:SkinAssistance.View"
    xmlns:refrecter="clr-namespace:SkinAssistance.Core.Refrecter;assembly=SkinAssistance.Core"
    xmlns:viewModel="clr-namespace:SkinAssistance.ViewModel"
    xmlns:commands="clr-namespace:SkinAssistance.Commands">

    <Style TargetType="ContentPresenter">
        <Setter Property="TextElement.FontSize" Value="{DynamicResource FontSize}"/>
        <Setter Property="TextElement.FontFamily" Value="{DynamicResource FontName}"/>
        
    </Style>

    <Style TargetType="TextElement">
        <Setter Property="FontSize" Value="{DynamicResource FontSize}"/>
        <Setter Property="FontFamily" Value="{DynamicResource FontName}"/>
        <Setter Property="Foreground" Value="{DynamicResource WindowForeground}"/>
    </Style>

    <Style TargetType="TextBlock">
        <Setter Property="FontSize" Value="{DynamicResource FontSize}"/>
        <Setter Property="FontFamily" Value="{DynamicResource FontName}"/>
        <Setter Property="Foreground" Value="{DynamicResource WindowForeground}"/>
    </Style>

    <Style TargetType="ContentControl">
        <Setter Property="FontSize" Value="{DynamicResource FontSize}"/>
        <Setter Property="FontFamily" Value="{DynamicResource FontName}"/>
        <Setter Property="Foreground" Value="{DynamicResource WindowForeground}"/>
    </Style>

    <Style x:Key="ScrollBarLineButton"
           TargetType="{x:Type RepeatButton}">
        <Setter Property="SnapsToDevicePixels"
                Value="true" />
        <Setter Property="Focusable"
                Value="false" />
        <Setter Property="Background"
                Value="{DynamicResource BackgroundNormal}" />
        <Setter Property="BorderBrush"
                Value="{DynamicResource BorderBrushNormal}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="1">
                        <Path HorizontalAlignment="Center"
                              VerticalAlignment="Center"
                              Fill="{DynamicResource Foreground}"
                              Data="{Binding Path=Content, RelativeSource={RelativeSource TemplatedParent}}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                                 Value="True">
                            <Setter Property="Background"
                                    Value="{DynamicResource BackgroundHighlighted}" />
                            <Setter Property="BorderBrush"
                                    Value="{DynamicResource BorderBrushHighlighted}" />
                        </Trigger>
                        <Trigger Property="IsPressed"
                                 Value="true">
                            <Setter Property="Background"
                                    Value="{DynamicResource BackgroundSelected}" />
                            <Setter Property="BorderBrush"
                                    Value="{DynamicResource BorderBrushSelected}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ScrollBarPageButton"
           TargetType="{x:Type RepeatButton}">
        <Setter Property="SnapsToDevicePixels"
                Value="True" />
        <Setter Property="Background"
                Value="Transparent" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Border Background="{TemplateBinding Background}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver"
                     Value="True">
                <Setter Property="Background"
                        Value="{DynamicResource ScrollBarPageButtonBackgroundHighlighted}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="ScrollBarThumb"
           TargetType="{x:Type Thumb}">
        <Setter Property="SnapsToDevicePixels"
                Value="true" />
        <Setter Property="IsTabStop"
                Value="false" />
        <Setter Property="Focusable"
                Value="false" />
        <Setter Property="Background"
                Value="{DynamicResource BackgroundNormal}" />
        <Setter Property="BorderBrush"
                Value="{DynamicResource BorderBrushNormal}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="1" />
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                                 Value="True">
                            <Setter Property="Background"
                                    Value="{DynamicResource BackgroundHighlighted}" />
                            <Setter Property="BorderBrush"
                                    Value="{DynamicResource BorderBrushHighlighted}" />
                        </Trigger>
                        <Trigger Property="IsDragging"
                                 Value="True">
                            <Setter Property="Background"
                                    Value="{DynamicResource BackgroundSelected}" />
                            <Setter Property="BorderBrush"
                                    Value="{DynamicResource BorderBrushSelected}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="HorizontalScrollBar"
                     TargetType="{x:Type ScrollBar}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="1" />
                <ColumnDefinition />
                <ColumnDefinition Width="1" />
            </Grid.ColumnDefinitions>
          
            <Track Name="PART_Track"
                   Grid.Column="1">
                <Track.DecreaseRepeatButton>
                    <RepeatButton Style="{StaticResource ScrollBarPageButton}"
                                  Command="ScrollBar.PageLeftCommand" />
                </Track.DecreaseRepeatButton>
                <Track.Thumb>
                    <Thumb Style="{StaticResource ScrollBarThumb}" />
                </Track.Thumb>
                <Track.IncreaseRepeatButton>
                    <RepeatButton Style="{StaticResource ScrollBarPageButton}"
                                  Command="ScrollBar.PageRightCommand" />
                </Track.IncreaseRepeatButton>
            </Track>
          
        </Grid>
    </ControlTemplate>

    <ControlTemplate x:Key="VerticalScrollBar"
                     TargetType="{x:Type ScrollBar}">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="1" />
                <RowDefinition />
                <RowDefinition Height="1" />
            </Grid.RowDefinitions>
        
            <Track Name="PART_Track"
                   Grid.Row="1"
                   IsDirectionReversed="true">
                <Track.DecreaseRepeatButton>
                    <RepeatButton Style="{StaticResource ScrollBarPageButton}"
                                  Command="ScrollBar.PageUpCommand" />
                </Track.DecreaseRepeatButton>
                <Track.Thumb>
                    <Thumb Style="{StaticResource ScrollBarThumb}" />
                </Track.Thumb>
                <Track.IncreaseRepeatButton>
                    <RepeatButton Style="{StaticResource ScrollBarPageButton}"
                                  Command="ScrollBar.PageDownCommand" />
                </Track.IncreaseRepeatButton>
            </Track>
          
        </Grid>
    </ControlTemplate>

    <Style  
           TargetType="{x:Type ScrollBar}">
        <Setter Property="SnapsToDevicePixels"
                Value="True" />
        <Setter Property="OverridesDefaultStyle"
                Value="true" />
        <Style.Triggers>
            <Trigger Property="Orientation"
                     Value="Vertical">
                <Setter Property="Width"
                        Value="10" />
                <Setter Property="Height"
                        Value="Auto" />
                <Setter Property="Template"
                        Value="{StaticResource VerticalScrollBar}" />
            </Trigger>
            <Trigger Property="Orientation"
                     Value="Horizontal">
                <Setter Property="Width"
                        Value="Auto" />
                <Setter Property="Height"
                        Value="10" />
                <Setter Property="Template"
                        Value="{StaticResource HorizontalScrollBar}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style  TargetType="{x:Type ScrollViewer}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                    <Grid x:Name="Grid" Background="{TemplateBinding Background}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition x:Name="leftColumn" Width="*" />
                            <ColumnDefinition x:Name="rightColumn" Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <ScrollContentPresenter x:Name="PART_ScrollContentPresenter"
                                                Grid.Row="0"
                                                Grid.Column="0"
                                                Margin="{TemplateBinding Padding}"
                                                CanContentScroll="{TemplateBinding CanContentScroll}"
                                                CanHorizontallyScroll="False"
                                                CanVerticallyScroll="False"
                                                Content="{TemplateBinding Content}"
                                                ContentTemplate="{TemplateBinding ContentTemplate}" />
                        <ScrollBar x:Name="PART_VerticalScrollBar"
                                   Grid.Row="0"
                                   Grid.Column="1"
                                   AutomationProperties.AutomationId="VerticalScrollBar"
                                   Cursor="Arrow"
                                   Maximum="{TemplateBinding ScrollableHeight}"
                                   Minimum="0"
                                   ViewportSize="{TemplateBinding ViewportHeight}"
                                   Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
                                   Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
                        <ScrollBar x:Name="PART_HorizontalScrollBar"
                                   Grid.Row="1"
                                   Grid.Column="0"
                                   AutomationProperties.AutomationId="HorizontalScrollBar"
                                   Cursor="Arrow"
                                   Maximum="{TemplateBinding ScrollableWidth}"
                                   Minimum="0"
                                   Orientation="Horizontal"
                                   ViewportSize="{TemplateBinding ViewportWidth}"
                                   Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
                                   Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
                    </Grid>
                    
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type bootstrap:SplashWindow}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type bootstrap:SplashWindow}">
                    <Border Width="700" Height="400" UseLayoutRounding="True" ClipToBounds="True">
                        <Viewport3D Grid.Row="0">
                            <Viewport3D.Camera>
                                <PerspectiveCamera Position="0 0 845" LookDirection="0 0 -1" />
                            </Viewport3D.Camera>
                            <Viewport3D.Children>
                                <ContainerUIElement3D>
                                    <Viewport2DVisual3D>
                                        <Viewport2DVisual3D.Geometry>
                                            <MeshGeometry3D Positions="-350 200 0  -350 -200 0  350 -200 0  350 200 0" TriangleIndices="0 1 2  0 2 3" TextureCoordinates="0 0  0 1  1 1  1 0"/>
                                        </Viewport2DVisual3D.Geometry>
                                        <Viewport2DVisual3D.Material>
                                            <DiffuseMaterial Viewport2DVisual3D.IsVisualHostMaterial="True"/>
                                        </Viewport2DVisual3D.Material>
                                        <Viewport2DVisual3D.Visual>
                                            <ContentControl x:Name="ccFirst" Width="700" Height="400">
                                                <Grid x:Name="ggLoading" Width="700" Height="400" Background="Transparent">
                                                    <Grid Background="#444444" Width="450" Height="260" VerticalAlignment="Center" HorizontalAlignment="Center">
                                                        <Grid.RowDefinitions>
                                                            <RowDefinition Height="60"/>
                                                            <RowDefinition Height="2*"/>
                                                            <RowDefinition Height="*"/>
                                                            <RowDefinition Height="40"/>
                                                            <RowDefinition Height="5"/>
                                                        </Grid.RowDefinitions>
                                                        <TextBlock  Foreground="Black" VerticalAlignment="Center" HorizontalAlignment="Right" Margin="10" FontSize="14" Text="{x:Static refrecter:ProductInfo.VersionInfoString}"/>
                                                        <StackPanel Orientation="Horizontal"  Grid.Row="1" HorizontalAlignment="Center" >
                                                            <TextBlock  Foreground="GreenYellow" x:Name="txtTitle" HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="20">主题管理器</TextBlock>
                                                        </StackPanel>
                                                        <Grid Background="#444444" Grid.Row="3" >
                                                            <TextBlock x:Name="txtInfo" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="Black" FontSize="14" Text="{Binding CurrentInfomation, Mode=OneWay}"/>
                                                        </Grid>
                                                        <Grid Grid.Row="4" Background="#444444">
                                                            <controls:MetroProgressBar
                                                                Foreground="GreenYellow"
                                                                Maximum="{Binding TotalProgress, Mode=OneWay}"
                                                                Value="{Binding CurrentProgress, Mode=OneWay}" />
                                                        </Grid>
                                                    </Grid>
                                                </Grid>
                                            </ContentControl>
                                        </Viewport2DVisual3D.Visual>
                                    </Viewport2DVisual3D>
                                    <Viewport2DVisual3D>
                                        <Viewport2DVisual3D.Geometry>
                                            <MeshGeometry3D x:Name="mg3d" Positions="350 200 0  350 -200 0  -350 -200 0  -350 200 0" TriangleIndices="0 1 2  0 2 3" TextureCoordinates="0 0  0 1  1 1  1 0"/>
                                        </Viewport2DVisual3D.Geometry>
                                        <Viewport2DVisual3D.Material>
                                            <DiffuseMaterial Viewport2DVisual3D.IsVisualHostMaterial="True"/>
                                        </Viewport2DVisual3D.Material>
                                        <Viewport2DVisual3D.Visual>
                                            <!--背面视图-->
                                            <ContentControl Width="700" Height="400" x:Name="ccSecond"></ContentControl>
                                        </Viewport2DVisual3D.Visual>
                                    </Viewport2DVisual3D>
                                    <!-- 三维变换 -->
                                    <ContainerUIElement3D.Transform>
                                        <RotateTransform3D CenterX="0.5" CenterY="0.5" CenterZ="0.5">
                                            <RotateTransform3D.Rotation>
                                                <AxisAngleRotation3D x:Name="axr" Angle="0" Axis="0 1 0"/>
                                            </RotateTransform3D.Rotation>
                                        </RotateTransform3D>
                                    </ContainerUIElement3D.Transform>
                                </ContainerUIElement3D>
                                <ModelVisual3D>
                                    <ModelVisual3D.Content>
                                        <DirectionalLight Color="Transparent"/>
                                    </ModelVisual3D.Content>
                                </ModelVisual3D>
                            </Viewport3D.Children>
                        </Viewport3D>
                    </Border>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Button}">
        <Setter Property="Foreground"
                Value="{DynamicResource Foreground}" />
        <Setter Property="Background"
                Value="{DynamicResource BackgroundNormal}" />
        <Setter Property="BorderBrush"
                Value="{DynamicResource BorderBrushNormal}" />
        <Setter Property="Padding" Value="5,2"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border SnapsToDevicePixels="True" Padding="{TemplateBinding Padding}"
                            BorderThickness="1" CornerRadius="3"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            Background="{TemplateBinding Background}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                                 Value="True">
                            
                            <Setter Property="Opacity"
                                    Value="{DynamicResource FocusOpacity}" />
                        </Trigger>
                        <Trigger Property="IsPressed"
                                 Value="True">
                            <Setter Property="Opacity"
                                    Value="{DynamicResource PressedOpacity}" />
                            
                        </Trigger>
                        <Trigger Property="IsEnabled"
                                 Value="False">
                            <Setter Property="Opacity"
                                    Value="{DynamicResource DisableOpacity}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
   
    <Style TargetType="{x:Type ListViewItem}">
        <Setter Property="Foreground"
                Value="{DynamicResource BlackBrush}" />
        <Setter Property="HorizontalContentAlignment"
                Value="Stretch" />
        <Setter Property="VerticalContentAlignment"
                Value="Center" />
        <Setter Property="MinHeight"
                Value="25" />
        <Setter Property="Margin"
                Value="0" />
        <Setter Property="Padding"
                Value="5,2" />
        <Setter Property="SnapsToDevicePixels"
                Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListViewItem}">
                    <Border x:Name="Border"
                            Background="{TemplateBinding Background}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                        <ContentPresenter Margin="{TemplateBinding Padding}"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="MessageDetailsStyle" TargetType="{x:Type ListView}">
        <Setter Property="BorderBrush"
                Value="{DynamicResource BlackBrush}" />
        <Setter Property="Background"
                Value="{DynamicResource WhiteBrush}" />
        <!-- default to 0 -->
        <Setter Property="BorderThickness"
                Value="0" />
        <Setter Property="SnapsToDevicePixels"
                Value="True" />
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <VirtualizingStackPanel VirtualizingPanel.ScrollUnit="Pixel" VirtualizingPanel.CacheLength="5" VirtualizingPanel.CacheLengthUnit="Pixel" VirtualizingPanel.IsVirtualizing="True"  VirtualizingPanel.IsContainerVirtualizable="True" IsItemsHost="True" Orientation="Vertical"/>
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListView}">
                    <Border Name="Border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <ScrollViewer>
                            <ItemsPresenter />
                        </ScrollViewer>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled"
                                 Value="False">
                            <Setter TargetName="Border"
                                    Property="BorderBrush"
                                    Value="{DynamicResource GrayBrush9}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type ListView}" BasedOn="{StaticResource MessageDetailsStyle}">
        
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <VirtualizingStackPanel VirtualizingPanel.ScrollUnit="Pixel" VirtualizingPanel.CacheLength="5" VirtualizingPanel.CacheLengthUnit="Pixel" VirtualizingPanel.IsVirtualizing="True"  VirtualizingPanel.IsContainerVirtualizable="True" IsItemsHost="True" Orientation="Horizontal"/>
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        
    </Style>

    <Style TargetType="{x:Type CheckBox}">
        <Setter Property="Background" Value="{DynamicResource WhiteBrush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource CheckBoxBrush}" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="Padding" Value="6 0 0 0" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="CheckBox">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition x:Name="LeftCol" Width="18" />
                            <ColumnDefinition x:Name="RightCol" Width="*" />
                        </Grid.ColumnDefinitions>
                        <Grid x:Name="PART_CHECKBOX">
                            <Rectangle Margin="-6 0" Fill="{DynamicResource TransparentWhiteBrush}" />
                            <Border x:Name="normal"
                                    Width="18"
                                    Height="18"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            <Path x:Name="checkBox"
                                  Width="12"
                                  Height="10"
                                  Data="M 1145.607177734375,430 C1145.607177734375,430 1141.449951171875,435.0772705078125 1141.449951171875,435.0772705078125 1141.449951171875,435.0772705078125 1139.232177734375,433.0999755859375 1139.232177734375,433.0999755859375 1139.232177734375,433.0999755859375 1138,434.5538330078125 1138,434.5538330078125 1138,434.5538330078125 1141.482177734375,438 1141.482177734375,438 1141.482177734375,438 1141.96875,437.9375 1141.96875,437.9375 1141.96875,437.9375 1147,431.34619140625 1147,431.34619140625 1147,431.34619140625 1145.607177734375,430 1145.607177734375,430 z"
                                  Fill="{DynamicResource HighlightBrush}"
                                  Opacity="0"
                                  Stretch="Fill"
                                  UseLayoutRounding="False" />
                            <Rectangle x:Name="IndeterminateCheck"
                                       Width="8"
                                       Height="3"
                                       Fill="{DynamicResource GrayBrush3}"
                                       Opacity="0" />
                            <Border x:Name="disabled"
                                    Width="18"
                                    Height="18"
                                    Background="{DynamicResource SemiTransparentWhiteBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    Opacity="0"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Grid>
                        <ContentPresenter x:Name="contentPresenter"
                                          Grid.Column="1"
                                          Margin="{TemplateBinding Padding}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          Content="{TemplateBinding Content}"
                                          ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                          ContentTemplate="{TemplateBinding ContentTemplate}"
                                          ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                                          RecognizesAccessKey="True" />
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="contentPresenter"
                                                         Storyboard.TargetProperty="(UIElement.Opacity)"
                                                         To=".55"
                                                         Duration="0" />
                                        <DoubleAnimation Storyboard.TargetName="disabled"
                                                         Storyboard.TargetProperty="(UIElement.Opacity)"
                                                         To="1"
                                                         Duration="0" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CheckStates">
                                <VisualState x:Name="Checked">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="checkBox"
                                                         Storyboard.TargetProperty="(UIElement.Opacity)"
                                                         To="1"
                                                         Duration="0" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unchecked" />
                                <VisualState x:Name="Indeterminate">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="IndeterminateCheck"
                                                         Storyboard.TargetProperty="(UIElement.Opacity)"
                                                         To="1"
                                                         Duration="0" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter   Property="Opacity" Value="{DynamicResource FocusOpacity}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter   Property="Opacity" Value="{DynamicResource PressedOpacity}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter   Property="Opacity" Value="{DynamicResource DisableOpacity}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="VerticalContentAlignment" Value="Center" />
    </Style>

    <DataTemplate DataType="{x:Type viewModel:Operation}">
        <Button x:Name="target" IsEnabled="{Binding IsEnabled,Mode=OneWay}"  Content="{Binding OptionName}" Command="commands:SkinAssistanceCommands.SwitchOperationCommands" CommandParameter="{Binding}">
            
        </Button>
        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding IsSelected,Mode=OneWay}" Value="True">
                <Setter TargetName="target" Property="Background" Value="#ff0088ff"/>
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    <DataTemplate DataType="{x:Type viewModel:FileMatchOption}">
        <CheckBox IsEnabled="{Binding IsEnabled,Mode=OneWay}" Content="{Binding MatchName}" IsChecked="{Binding IsSelected,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"/>
    </DataTemplate>
</ResourceDictionary>
